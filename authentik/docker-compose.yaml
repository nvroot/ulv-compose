services:
  postgresql:
    image: postgres:16-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 60s
      timeout: 20s
      retries: 5
      start_period: 60s
      start_interval: 5s
    volumes:
      - './authentik-db:/var/lib/postgresql/data'
    environment:
      - 'POSTGRES_PASSWORD=changeme'
      - 'POSTGRES_USER=authentik-user'
      - 'POSTGRES_DB=authentik'
  redis:
    image: redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 60s
      timeout: 20s
      retries: 5
      start_period: 60s
      start_interval: 5s
    volumes:
      - './authentik-redis:/data'
  authentik-server:
    image: ghcr.io/goauthentik/server:2024.12.3
    container_name: authentik
    restart: unless-stopped
    command: server
    environment:
      - 'SERVICE_FQDN_AUTHENTIKSERVER_9000'
      - 'AUTHENTIK_REDIS__HOST=redis'
      - 'AUTHENTIK_POSTGRESQL__HOST=postgresql'
      - 'AUTHENTIK_POSTGRESQL__USER=authentik-user'
      - 'AUTHENTIK_POSTGRESQL__NAME=authentik'
      - 'AUTHENTIK_POSTGRESQL__PASSWORD=changeme'
      - 'AUTHENTIK_SECRET_KEY=secretkey'
      - 'AUTHENTIK_ERROR_REPORTING__ENABLED=true'
      - 'AUTHENTIK_EMAIL__HOST=smtp.example.com'
      - 'AUTHENTIK_EMAIL__PORT=465'
      - 'AUTHENTIK_EMAIL__USERNAME=admin@example.com'
      - 'AUTHENTIK_EMAIL__PASSWORD=email-password'
      - 'AUTHENTIK_EMAIL__USE_SSL=true'
      - 'AUTHENTIK_EMAIL__FROM=admin@example.com'
      - 'AUTHENTIK_DISABLE_STARTUP_ANALYTICS=true'
      - 'AUTHENTIK_DISABLE_UPDATE_CHECK=true'
      - 'AUTHENTIK_ERROR_REPORTING__ENABLED=false'
    volumes:
      - ./media:/media
      - ./custom-templates:/templates
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
  authentik-worker:
    image: ghcr.io/goauthentik/server:2024.12.3
    restart: unless-stopped
    command: worker
    environment:
      - 'AUTHENTIK_REDIS__HOST=redis'
      - 'AUTHENTIK_POSTGRESQL__HOST=postgresql'
      - 'AUTHENTIK_POSTGRESQL__USER=authentik-user'
      - 'AUTHENTIK_POSTGRESQL__NAME=authentik'
      - 'AUTHENTIK_POSTGRESQL__PASSWORD=dbpassword'
      - 'AUTHENTIK_SECRET_KEY=secret-key'
      - 'AUTHENTIK_ERROR_REPORTING__ENABLED=true'
      - 'AUTHENTIK_EMAIL__HOST=smtp.example.com'
      - 'AUTHENTIK_EMAIL__PORT=465'
      - 'AUTHENTIK_EMAIL__USERNAME=admin@example.com'
      - 'AUTHENTIK_EMAIL__PASSWORD=email-password'
      - 'AUTHENTIK_EMAIL__USE_SSL=true'
      - 'AUTHENTIK_EMAIL__FROM=admin@example.com'
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./media:/media
      - ./certs:/certs
      - ./custom-templates:/templates
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
